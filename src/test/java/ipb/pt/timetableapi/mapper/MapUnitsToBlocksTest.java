package ipb.pt.timetableapi.mapper;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
public class MapUnitsToBlocksTest {
    private final LessonUnitMapper lessonUnitMapper;

    @Autowired
    public MapUnitsToBlocksTest(LessonUnitMapper lessonUnitMapper) {
        this.lessonUnitMapper = lessonUnitMapper;
    }

    @Test
    public void test_10_Units_To_1_Block_5() {

        // id | time           | input       | output
        // 01 | 08:00 -> 08:30 | ┌── 0.5 ──┐ | ┌─── 5 ───┐
        // 02 | 08:30 -> 09:00 | ┌── 0.5 ──┐ | │         │
        // 03 | 09:00 -> 09:30 | ┌── 0.5 ──┐ | │         │
        // 04 | 09:30 -> 10:00 | ┌── 0.5 ──┐ | │         │
        // 05 | 10:00 -> 10:30 | ┌── 0.5 ──┐ | │         │
        // 06 | 10:30 -> 11:00 | ┌── 0.5 ──┐ | │         │
        // 07 | 11:00 -> 11:30 | ┌── 0.5 ──┐ | │         │
        // 08 | 11:30 -> 12:00 | ┌── 0.5 ──┐ | │         │
        // 09 | 12:00 -> 12:30 | ┌── 0.5 ──┐ | │         │
        // 10 | 12:30 -> 13:00 | ┌── 0.5 ──┐ | └─────────┘

        // Arrange
        // Act
        // Assert
    }

    @Test
    public void test_9_Units_To_1_Block_4_5() {

        // id | time           | input       | output
        // 01 | 08:00 -> 08:30 | ┌── 0.5 ──┐ | ┌── 4.5 ──┐
        // 02 | 08:30 -> 09:00 | ┌── 0.5 ──┐ | │         │
        // 03 | 09:00 -> 09:30 | ┌── 0.5 ──┐ | │         │
        // 04 | 09:30 -> 10:00 | ┌── 0.5 ──┐ | │         │
        // 05 | 10:00 -> 10:30 | ┌── 0.5 ──┐ | │         │
        // 06 | 10:30 -> 11:00 | ┌── 0.5 ──┐ | │         │
        // 07 | 11:00 -> 11:30 | ┌── 0.5 ──┐ | │         │
        // 08 | 11:30 -> 12:00 | ┌── 0.5 ──┐ | │         │
        // 09 | 12:00 -> 12:30 | ┌── 0.5 ──┐ | │         │
        //    | 12:30 -> 13:00 |             | └─────────┘

        // Arrange
        // Act
        // Assert
    }

    @Test
    public void test_8_Units_To_1_Block_4() {

        // id | time           | input       | output
        // 01 | 08:00 -> 08:30 | ┌── 0.5 ──┐ | ┌─── 4 ───┐
        // 02 | 08:30 -> 09:00 | ┌── 0.5 ──┐ | │         │
        // 03 | 09:00 -> 09:30 | ┌── 0.5 ──┐ | │         │
        // 04 | 09:30 -> 10:00 | ┌── 0.5 ──┐ | │         │
        // 05 | 10:00 -> 10:30 | ┌── 0.5 ──┐ | │         │
        // 06 | 10:30 -> 11:00 | ┌── 0.5 ──┐ | │         │
        // 07 | 11:00 -> 11:30 | ┌── 0.5 ──┐ | │         │
        // 08 | 11:30 -> 12:00 | ┌── 0.5 ──┐ | │         │
        //    | 12:00 -> 12:30 |             | │         │
        //    | 12:30 -> 13:00 |             | └─────────┘

        // Arrange
        // Act
        // Assert
    }

    @Test
    public void test_7_Units_To_1_Block_3_5() {

        // id | time           | input       | output
        // 01 | 08:00 -> 08:30 | ┌── 0.5 ──┐ | ┌── 3.5 ──┐
        // 02 | 08:30 -> 09:00 | ┌── 0.5 ──┐ | │         │
        // 03 | 09:00 -> 09:30 | ┌── 0.5 ──┐ | │         │
        // 04 | 09:30 -> 10:00 | ┌── 0.5 ──┐ | │         │
        // 05 | 10:00 -> 10:30 | ┌── 0.5 ──┐ | │         │
        // 06 | 10:30 -> 11:00 | ┌── 0.5 ──┐ | │         │
        // 07 | 11:00 -> 11:30 | ┌── 0.5 ──┐ | │         │
        //    | 11:30 -> 12:00 |             | │         │
        //    | 12:00 -> 12:30 |             | │         │
        //    | 12:30 -> 13:00 |             | └─────────┘

        // Arrange
        // Act
        // Assert
    }

    @Test
    public void test_6_Units_To_1_Block_3() {

        // id | time           | input       | output
        // 01 | 08:00 -> 08:30 | ┌── 0.5 ──┐ | ┌─── 3 ───┐
        // 02 | 08:30 -> 09:00 | ┌── 0.5 ──┐ | │         │
        // 03 | 09:00 -> 09:30 | ┌── 0.5 ──┐ | │         │
        // 04 | 09:30 -> 10:00 | ┌── 0.5 ──┐ | │         │
        // 05 | 10:00 -> 10:30 | ┌── 0.5 ──┐ | │         │
        // 06 | 10:30 -> 11:00 | ┌── 0.5 ──┐ | │         │
        //    | 11:00 -> 11:30 |             | │         │
        //    | 11:30 -> 12:00 |             | │         │
        //    | 12:00 -> 12:30 |             | │         │
        //    | 12:30 -> 13:00 |             | └─────────┘

        // Arrange
        // Act
        // Assert
    }

    @Test
    public void test_5_Units_To_1_Block_2_5() {

        // id | time           | input       | output
        // 01 | 08:00 -> 08:30 | ┌── 0.5 ──┐ | ┌── 2.5 ──┐
        // 02 | 08:30 -> 09:00 | ┌── 0.5 ──┐ | │         │
        // 03 | 09:00 -> 09:30 | ┌── 0.5 ──┐ | │         │
        // 04 | 09:30 -> 10:00 | ┌── 0.5 ──┐ | │         │
        // 05 | 10:00 -> 10:30 | ┌── 0.5 ──┐ | └─────────┘

        // Arrange
        // Act
        // Assert
    }

    @Test
    public void test_4_Units_To_1_Block_2() {

        // id | time           | input       | output
        // 01 | 08:00 -> 08:30 | ┌── 0.5 ──┐ | ┌─── 2 ───┐
        // 02 | 08:30 -> 09:00 | ┌── 0.5 ──┐ | │         │
        // 03 | 09:00 -> 09:30 | ┌── 0.5 ──┐ | │         │
        // 04 | 09:30 -> 10:00 | ┌── 0.5 ──┐ | │         │
        //    | 10:00 -> 10:30 |             | └─────────┘

        // Arrange
        // Act
        // Assert
    }

    @Test
    public void test_3_Units_To_1_Block_1_5() {

        // id | time           | input       | output
        // 01 | 08:00 -> 08:30 | ┌── 0.5 ──┐ | ┌── 1.5 ──┐
        // 02 | 08:30 -> 09:00 | ┌── 0.5 ──┐ | │         │
        // 03 | 09:00 -> 09:30 | ┌── 0.5 ──┐ | │         │
        //    | 09:30 -> 10:00 |             | │         │
        //    | 10:00 -> 10:30 |             | └─────────┘

        // Arrange
        // Act
        // Assert
    }

    @Test
    public void test_2_Units_To_1_Block_1() {

        // id | time           | input       | output
        // 01 | 08:00 -> 08:30 | ┌── 0.5 ──┐ | ┌─── 1 ───┐
        // 02 | 08:30 -> 09:00 | ┌── 0.5 ──┐ | │         │
        //    | 09:00 -> 09:30 |             | │         │
        //    | 09:30 -> 10:00 |             | │         │
        //    | 10:00 -> 10:30 |             | └─────────┘

        // Arrange
        // Act
        // Assert
    }

    @Test
    public void test_1_Units_To_1_Block_0_5() {

        // id | time           | input       | output
        // 01 | 08:00 -> 08:30 | ┌── 0.5 ──┐ | ┌── 0.5 ──┐

        // Arrange
        // Act
        // Assert
    }

    @Test
    public void test_10_Units_To_2_Blocks_2_5() {

        // id | time           | input       | output
        // 01 | 08:00 -> 08:30 | ┌── 0.5 ──┐ | ┌── 2.5 ──┐
        // 02 | 08:30 -> 09:00 | ┌── 0.5 ──┐ | │         │
        // 03 | 09:00 -> 09:30 | ┌── 0.5 ──┐ | │         │
        // 04 | 09:30 -> 10:00 | ┌── 0.5 ──┐ | │         │
        // 05 | 10:00 -> 10:30 | ┌── 0.5 ──┐ | └─────────┘
        // 06 | 10:30 -> 11:00 | ┌── 0.5 ──┐ | ┌── 2.5 ──┐
        // 07 | 11:00 -> 11:30 | ┌── 0.5 ──┐ | │         │
        // 08 | 11:30 -> 12:00 | ┌── 0.5 ──┐ | │         │
        // 09 | 12:00 -> 12:30 | ┌── 0.5 ──┐ | │         │
        // 10 | 12:30 -> 13:00 | ┌── 0.5 ──┐ | └─────────┘

        // Arrange
        // Act
        // Assert
    }

    @Test
    public void test_8_Units_To_2_Blocks_2() {

        // id | time           | input       | output
        // 01 | 08:00 -> 08:30 | ┌── 0.5 ──┐ | ┌─── 2 ───┐
        // 02 | 08:30 -> 09:00 | ┌── 0.5 ──┐ | │         │
        // 03 | 09:00 -> 09:30 | ┌── 0.5 ──┐ | │         │
        // 04 | 09:30 -> 10:00 | ┌── 0.5 ──┐ | │         │
        //    | 10:00 -> 10:30 |             | └─────────┘
        // 05 | 10:30 -> 11:00 | ┌── 0.5 ──┐ | ┌─── 2 ───┐
        // 06 | 11:00 -> 11:30 | ┌── 0.5 ──┐ | │         │
        // 07 | 11:30 -> 12:00 | ┌── 0.5 ──┐ | │         │
        // 08 | 12:00 -> 12:30 | ┌── 0.5 ──┐ | │         │
        //    | 12:30 -> 13:00 |             | └─────────┘

        // Arrange
        // Act
        // Assert
    }
}
